Sprint 0: Elaboração e Modelagem
Tarefas:
Definir o modelo de dados (tabelas, atributos, chaves primárias e relacionamentos).
Planejar as classes no .NET, com funções e atributos iniciais.
Delegar responsabilidades para classes específicas, seguindo boas práticas (ex.: separação de camadas como Controller, Service, Repository).
Documentar decisões no backlog.
Sprint 1: Configuração do Ambiente
Tarefas:
Configurar o ambiente de desenvolvimento no .NET Core.
Criar um servidor básico e mapear um endpoint inicial.
Testar a abertura do servidor no Postman com uma resposta simples (ex.: "Hello World").
Sprint 2: Configuração do Banco de Dados
Tarefas:
Adaptar e executar os scripts SQL no PostgreSQL para criar o banco de dados e populá-lo.
Validar as tabelas e seus relacionamentos no PGAdmin.
Desenvolver comandos CRUD em SQL puro e testar operações básicas no banco.
Sprint 3: Integração do Entity Framework
Tarefas:
Configurar o Entity Framework no projeto.
Mapear as tabelas do banco de dados para classes no .NET.
Criar endpoints simples (GET e POST) e testá-los via Postman.
Sprint 4: Integração do Sistema de Cache
Tarefas:
Implementar o uso de IMemoryCache para armazenar dados temporariamente.
Configurar TTL (Time to Live) para elementos no cache.
Testar armazenamento e recuperação de dados do cache via Postman.
Sprint 5: Integração da API Externa (IP2C)
Tarefas:
Configurar chamadas para a API IP2C e testar respostas no formato CSV.
Desenvolver lógica para converter a resposta da API em objetos utilizáveis.
Integrar os dados retornados ao fluxo da função principal (incluindo inserção no cache e no banco, se necessário).
Sprint 6: Tratamento de Erros na Função Principal
Tarefas:
Adicionar tratamento de erros HTTP (404 e 500).
Retornar mensagens de erro claras para requisições inválidas ou falhas na API externa.
Testar cenários de erro com dados ausentes ou malformados.
Sprint 7: Automação (Task Automática)
Tarefas:
Configurar o HostedService para criar o sistema de atualização automática.
Desenvolver lógica para verificar a consistência dos dados no banco com os da API externa.
Implementar atualização dos registros no banco e invalidação no cache, conforme necessário.
Sprint 8: Tratamento de Erros na Automação
Tarefas:
Implementar tratamento de exceções no sistema de automação.
Garantir logs adequados para monitorar falhas e reprocessamentos.
Testar cenários onde a API externa falhe ou os dados do banco sejam inconsistentes.
Sprint 9: Desenvolvimento do Sistema de Relatórios
Tarefas:
Planejar a estrutura de dados necessária para o relatório (ex.: atributos e junções de tabelas).
Criar e validar consultas SQL (ex.: inner join) no PGAdmin.
Desenvolver classes para estruturar os relatórios no .NET.
Sprint 10: Integração e Testes do Sistema de Relatórios
Tarefas:
Implementar o endpoint de relatório no .NET.
Testar requisições com parâmetros válidos e null via Postman.
Garantir que o resultado seja formatado e eficiente.
Sprint 11: Revisão e Refatoração
Tarefas:
Revisar o código para identificar redundâncias e melhorias.
Refatorar classes e métodos para seguir princípios de clean code.
Revisar e aprimorar o tratamento de exceções em todo o sistema.
Sprint 12: Internacionalização da Documentação
Tarefas:
Traduzir a documentação para o inglês, mantendo clareza e profissionalismo.
Garantir que o README inclua instruções claras para configuração e uso do projeto.
Sprint 13: Deploy (Opcional)
Tarefas:
Configurar o ambiente de produção, incluindo banco de dados e servidor.
Realizar testes de integração em produção.
Publicar o projeto em um ambiente acessível.
Sprint 14: Entrega Oficial
Tarefas:
Submeter o projeto nas plataformas exigidas pela empresa.
Incluir links ou arquivos necessários para avaliação.
